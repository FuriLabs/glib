#!/usr/bin/make -f

include /usr/share/gnome-pkg-tools/1/rules/check-dist.mk
-include /usr/share/gnome-pkg-tools/1/rules/gnome-get-source.mk

GNOME_MODULE := glib

# Members list of Debian GNOME Maintainers
TEAM_LIST ?= /usr/share/gnome-pkg-tools/pkg-gnome.team

# Remove maintainer from uploaders list
maintainer := $(shell sed -n 's/^Maintainer: //p' debian/control.in)
uploaders := $(shell grep -vF '$(maintainer)' $(TEAM_LIST))

STAMP_DIR := debian/stampdir

PATCH_DIR := debian/patches

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g -O0
else
	CFLAGS += -g -O2
endif

# Ensure the build aborts when there are still references to undefined
# symbols
LDFLAGS += -Wl,-z,defs

# Make the linker work a bit harder so dynamic loading can be done faster
LDFLAGS += -Wl,-O1

DEBVERSION := $(shell dpkg-parsechangelog | sed -n -e 's/^Version: //p')
VERSION := $(shell echo $(DEBVERSION) | sed -e 's/-[^-]*$$//')
APIVER := 2.0
SONAME := 0
GTKVER := 2.0
SHVER := 2.12.9

# list of flavors we build; each gets a builddir, a configure pass (configure
# args are defined below), a build pass, and an install pass (in two steps)
# Note: the shared flavor is required
FLAVORS := deb udeb

# build dir for the current flavor; this is only expanded in flavor specific
# targets
# Note: dh_clean will rm -rf debian/tmp, hence all builds
builddir = $(buildbasedir)/$*
buildbasedir = $(CURDIR)/debian/build

# install dir for the current flavor; this is only expanded in flavor specific
# targets
installdir = $(installbasedir)/$*
installbasedir = $(CURDIR)/debian/install

# configure flags
common_configure_flags := \
			--prefix=/usr \
			--mandir=\$${prefix}/share/man \
			--infodir=\$${prefix}/share/info \
			--with-html-dir=\$${prefix}/share/doc/libglib$(APIVER)-doc \
			--host=$(DEB_HOST_GNU_TYPE) \
			--build=$(DEB_BUILD_GNU_TYPE)
ifeq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
	common_configure_flags += --build=$(DEB_BUILD_GNU_TYPE)
else
	common_configure_flags += --build=$(DEB_BUILD_GNU_TYPE) --host=$(DEB_HOST_GNU_TYPE)
endif
deb_configure_flags := $(common_configure_flags) \
			--enable-static
udeb_configure_flags := $(common_configure_flags)

patch: $(STAMP_DIR)/patch-stamp

$(STAMP_DIR)/patch-stamp:
	dh_testdir
	# backup the original files to restore them in the clean target
	-test -r config.sub && cp config.sub config.sub.orig
	-test -r config.guess && cp config.guess config.guess.orig
	# apply patches
	QUILT_PATCHES=$(PATCH_DIR) quilt --quiltrc /dev/null push -a || test $$? = 2
	-test -r /usr/share/misc/config.sub && \
		cp -f /usr/share/misc/config.sub config.sub
	-test -r /usr/share/misc/config.guess && \
		cp -f /usr/share/misc/config.guess config.guess
	-mkdir -p $(STAMP_DIR)
	touch $@

$(STAMP_DIR)/configure-stamp-%: $(STAMP_DIR)/patch-stamp
	dh_testdir
	mkdir -p $(builddir)
	cd $(builddir) && \
		$(CURDIR)/configure $($*_configure_flags)
	sed -i \
		-e 's/^hardcode_libdir_flag_spec.*$$/hardcode_libdir_flag_spec=" -D__LIBTOOL_IS_A_FOOL__ "/' \
		-e '/^archive_cmds="/s/"$$/ \\$$deplibs"/' \
		$(builddir)/libtool
	touch $@

configure: $(addprefix $(STAMP_DIR)/configure-stamp-, $(FLAVORS))

$(STAMP_DIR)/build-stamp-%: $(STAMP_DIR)/configure-stamp-%
	dh_testdir
	LD_LIBRARY_PATH=$(builddir)/glib/.libs:$(builddir)/gmodule/.libs:$(builddir)/gobject/.libs:$(builddir)/gthread/.libs:$(LD_LIBRARY_PATH) \
		$(MAKE) -C $(builddir)
	touch $@

build: $(addprefix $(STAMP_DIR)/build-stamp-, $(FLAVORS))

$(STAMP_DIR)/install-stamp-%: $(STAMP_DIR)/build-stamp-%
	mkdir -p $(installdir)
	$(MAKE) -C $(builddir) install \
		DESTDIR=$(installdir)
	touch $@

install: $(addprefix $(STAMP_DIR)/install-stamp-, $(FLAVORS))

debian/control:
	dh_testdir
	sed -e "s#@SONAME@#$(SONAME)#g" \
		-e "s#@VERSION@#$(VERSION)#g" \
		-e "s#@GNOME_TEAM@#$(uploaders)#g" \
		$@.in > $@

clean: debian/control
	dh_testdir
	dh_testroot
	# remove install and build dirs
	rm -rf $(installbasedir)
	rm -rf $(buildbasedir)
	# restore files from backup (before unpatching)
	-test -r config.sub.orig && mv -f config.sub.orig config.sub
	-test -r config.guess.orig && mv -f config.guess.orig config.guess
	# unapply patches, if any
	QUILT_PATCHES=$(PATCH_DIR) quilt --quiltrc /dev/null pop -a -R || test $$? = 2
	-rm -rf .pc
	-rm -rf $(STAMP_DIR)
	dh_clean

binary-indep: build install
	dh_testdir
	dh_testroot
	dh_install -i
	dh_installdocs -i
	rm -rf $(CURDIR)/debian/libglib$(APIVER)-data/usr/share/doc/libglib$(APIVER)-data
	dh_link -plibglib$(APIVER)-data \
		usr/share/doc/libglib$(APIVER)-$(SONAME) \
		usr/share/doc/libglib$(APIVER)-data
	dh_link -plibglib$(APIVER)-doc \
		usr/share/doc/libgtk$(GTKVER)-doc/gtk \
		usr/share/doc/libglib$(APIVER)-doc/gtk
	# create the symlinks on /usr/share/gtk-doc/html
	for i in glib gobject; do				\
		dh_link -plibglib$(APIVER)-doc			\
			usr/share/doc/libglib$(APIVER)-doc/$$i	\
			usr/share/gtk-doc/html/$$i;		\
	done
	dh_installexamples -i
	dh_installinfo -i
	dh_installchangelogs -i ChangeLog
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_install -a
	# empty the dependency_libs in the *.la files
	sed -i "/dependency_libs/ s/'.*'/''/" debian/libglib$(APIVER)-dev/usr/lib/*.la
	dh_installdocs -a
	rm -rf $(CURDIR)/debian/libglib$(APIVER)-$(SONAME)-dbg/usr/share/doc/libglib$(APIVER)-$(SONAME)-dbg
	rm -rf $(CURDIR)/debian/libglib$(APIVER)-dev/usr/share/doc/libglib$(APIVER)-dev
	dh_link -plibglib$(APIVER)-$(SONAME)-dbg \
		usr/share/doc/libglib$(APIVER)-$(SONAME) \
		usr/share/doc/libglib$(APIVER)-$(SONAME)-dbg
	dh_link -plibglib$(APIVER)-dev \
		usr/share/doc/libglib$(APIVER)-$(SONAME) \
		usr/share/doc/libglib$(APIVER)-dev
	dh_installexamples -a
	dh_installmenu -a
	dh_installman -plibglib$(APIVER)-dev
	dh_installinfo -a
	dh_installchangelogs -a ChangeLog
	dh_strip -a --dbg-package=libglib$(APIVER)-$(SONAME)
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs	-plibglib$(APIVER)-$(SONAME) \
			-V "libglib$(APIVER)-$(SONAME) (>= $(SHVER))" \
			--add-udeb="libglib$(APIVER)-udeb"
	dh_installdeb -a
	dh_shlibdeps -a -ldebian/libglib$(APIVER)-$(SONAME)/usr/lib -Llibglib$(APIVER)-$(SONAME)
	# hmm, I don't know but need to fix the self dependency for the udeb.
	sed -i 's/, libglib$(APIVER)-udeb (>= [.0-9]*)//' $(CURDIR)/debian/libglib$(APIVER)-udeb.substvars
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: patch configure build install clean binary-indep binary-arch binary debian/control
