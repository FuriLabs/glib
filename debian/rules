#!/usr/bin/make -f

# Members list of Debian GNOME Maintainers
TEAM_LIST ?= /usr/share/gnome-pkg-tools/pkg-gnome.team

include /usr/share/gnome-pkg-tools/1/rules/check-dist.mk
-include /usr/share/gnome-pkg-tools/1/rules/gnome-get-source.mk

GNOME_MODULE := glib

# Remove maintainer from uploaders list
maintainer := $(shell sed -n 's/^Maintainer: //p' debian/control.in)
uploaders := $(shell grep -vF '$(maintainer)' $(TEAM_LIST))

STAMP_DIR := debian/stampdir

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g -O0
else
	CFLAGS += -g -O2
endif

# Ensure the build aborts when there are still references to undefined
# symbols.
LDFLAGS += -Wl,-z,defs

# Make the linker work a bit harder so dynamic loading can be done faster
LDFLAGS += -Wl,-O1

# list of flavors we build; each gets a builddir, a configure pass (configure
# args are defined below), a build pass, and an install pass (in two steps)
# Note: the shared flavor is required
FLAVORS := deb udeb

# build dir for the current flavor; this is only expanded in flavor specific
# targets
# Note: dh_clean will rm -rf debian/tmp, hence all builds
builddir = $(buildbasedir)/$*
buildbasedir = $(CURDIR)/debian/build

# install dir for the current flavor; this is only expanded in flavor specific
# targets
installdir = $(installbasedir)/$*
installbasedir = $(CURDIR)/debian/install

##
debversion=$(shell dpkg-parsechangelog | sed -n -e 's/^Version: //p')
version=$(shell echo ${debversion} | sed -e 's/-[^-]*$$//')
major=$(shell echo ${version} | sed -e 's/\(^[0-9]*\)\.[0-9]*\.[0-9]*$$/\1/')
minor=$(shell echo ${version} | sed -e 's/^[0-9]*\.\([0-9]*\)\.[0-9]*$$/\1/')
rel=$(shell echo ${version} | sed -e 's/^[0-9]*\.[0-9]*\.\([0-9]*\)$$/\1/')
shortver=$(major).$(minor)
apiver=2.0
soname=0
gtkver=2.0
shver=2.12.9

_echo_cfiles = for f in ${1}; do if [ -f $$f ]; then echo $$f; fi; done
cfiles := $(shell $(call _echo_cfiles, $(wildcard debian/libglib$(apiver)-@SONAME@.*)))

# configure flags
common_configure_flags := \
			--prefix=/usr \
			--mandir=\$${prefix}/share/man \
			--infodir=\$${prefix}/share/info \
			--with-html-dir=\$${prefix}/share/doc/libglib$(apiver)-doc \
			--host=$(DEB_HOST_GNU_TYPE) \
			--build=$(DEB_BUILD_GNU_TYPE)
ifeq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
	common_configure_flags += --build=$(DEB_BUILD_GNU_TYPE)
else
	common_configure_flags += --build=$(DEB_BUILD_GNU_TYPE) --host=$(DEB_HOST_GNU_TYPE)
endif
deb_configure_flags := $(common_configure_flags) \
			--enable-static
udeb_configure_flags := $(common_configure_flags)


debian/control:
	dh_testdir
	sed -e 's/@SONAME@/${soname}/g' -e 's/@VERSION@/${version}/g' -e 's/@GNOME_TEAM@/${uploaders}/' $@.in > $@

patch: $(STAMP_DIR)/patch-stamp

$(STAMP_DIR)/patch-stamp:
	dh_testdir
	# backup the original files to restore them in the clean target
	-test -r config.sub && cp config.sub config.sub.orig
	-test -r config.guess && cp config.guess config.guess.orig
	# apply patches
	QUILT_PATCHES=$(PATCH_DIR) quilt --quiltrc /dev/null push -a || test $$? = 2
	-test -r /usr/share/misc/config.sub && \
		cp -f /usr/share/misc/config.sub config.sub
	-test -r /usr/share/misc/config.guess && \
		cp -f /usr/share/misc/config.guess config.guess
	-mkdir -p $(STAMP_DIR)
	touch $@

$(STAMP_DIR)/configure-stamp-%: $(STAMP_DIR)/patch-stamp
	dh_testdir
	mkdir -p $(builddir)
	cd $(builddir) && \
		$(CURDIR)/configure $($*_configure_flags)
	cd $(builddir) && \
		sed < libtool > libtool-2 \
			-e 's/^hardcode_libdir_flag_spec.*$$/hardcode_libdir_flag_spec=" -D__LIBTOOL_IS_A_FOOL__ "/' \
			-e '/^archive_cmds="/s/"$$/ \\$$deplibs"/' && \
			mv libtool-2 libtool
	touch $@

configure: $(addprefix $(STAMP_DIR)/configure-stamp-, $(FLAVORS))

$(STAMP_DIR)/build-stamp-%: $(STAMP_DIR)/configure-stamp-%
	dh_testdir
	LD_LIBRARY_PATH=$(builddir)/glib/.libs:$(builddir)/gmodule/.libs:$(builddir)/gobject/.libs:$(builddir)/gthread/.libs:$(LD_LIBRARY_PATH) \
		$(MAKE) -C $(builddir)
	touch $@

build: $(addprefix $(STAMP_DIR)/build-stamp-, $(FLAVORS))

$(STAMP_DIR)/install-stamp-%: $(STAMP_DIR)/build-stamp-%
	mkdir -p $(installdir)
	$(MAKE) -C $(builddir) install \
		DESTDIR=$(installdir)
	touch $@

install: $(addprefix $(STAMP_DIR)/install-stamp-, $(FLAVORS))

clean:: debian/control
	dh_testdir
	dh_testroot
	# remove install and build dirs
	rm -rf $(installbasedir)
	rm -rf $(buildbasedir)
	# restore files from backup (before unpatching)
	-test -r config.sub.orig && mv -f config.sub.orig config.sub
	-test -r config.guess.orig && mv -f config.guess.orig config.guess
	# unapply patches, if any
	QUILT_PATCHES=$(PATCH_DIR) quilt --quiltrc /dev/null pop -a -R || test $$? = 2
	-rm -rf .pc
	-rm -rf $(STAMP_DIR)
	dh_clean

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_install -i
	dh_installdocs -i
	rm -rf $(CURDIR)/debian/libglib$(apiver)-data/usr/share/doc/libglib$(apiver)-data
	dh_link -plibglib$(apiver)-data \
		usr/share/doc/libglib$(apiver)-$(soname) \
		usr/share/doc/libglib$(apiver)-data
	dh_link -plibglib$(apiver)-doc \
		usr/share/doc/libgtk$(gtkver)-doc/gtk \
		usr/share/doc/libglib$(apiver)-doc/gtk
	# create the symlinks on /usr/share/gtk-doc/html
	for i in glib gobject; do				\
		dh_link -plibglib$(apiver)-doc			\
			usr/share/doc/libglib$(apiver)-doc/$$i	\
			usr/share/gtk-doc/html/$$i;		\
	done
	dh_installexamples -i
	dh_installinfo -i
	dh_installchangelogs -i ChangeLog
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_install -a
	dh_installdocs -a
	rm -rf $(CURDIR)/debian/libglib$(apiver)-$(soname)-dbg/usr/share/doc/libglib$(apiver)-$(soname)-dbg
	rm -rf $(CURDIR)/debian/libglib$(apiver)-dev/usr/share/doc/libglib$(apiver)-dev
	dh_link -plibglib$(apiver)-$(soname)-dbg \
		usr/share/doc/libglib$(apiver)-$(soname) \
		usr/share/doc/libglib$(apiver)-$(soname)-dbg
	dh_link -plibglib$(apiver)-dev \
		usr/share/doc/libglib$(apiver)-$(soname) \
		usr/share/doc/libglib$(apiver)-dev
	dh_installexamples -a
	dh_installmenu -a
	dh_installman -plibglib$(apiver)-dev
	dh_installinfo -a
	dh_installchangelogs -a ChangeLog
	dh_strip -a --dbg-package=libglib$(apiver)-$(soname)
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs	-plibglib$(apiver)-$(soname) \
			-V "libglib${apiver}-${soname} (>= ${shver})" \
			--add-udeb="libglib${apiver}-udeb"
	dh_installdeb -a
	dh_shlibdeps -a -ldebian/libglib$(apiver)-$(soname)/usr/lib -Llibglib$(apiver)-$(soname)
	# hmm, I don't know but need to fix the self dependency for the udeb.
	sed -i 's/, libglib$(apiver)-udeb (>= [.0-9]*)//' $(CURDIR)/debian/libglib$(apiver)-udeb.substvars
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: patch configure build install clean binary-indep binary-arch binary debian/control
