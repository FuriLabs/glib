From: Simon McVittie <smcv@collabora.com>
Date: Tue, 1 Oct 2019 23:27:53 +0100
Subject: g_file_info_get_modification_date_time: Calculate in integer domain
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

g_date_time_add_seconds() and g_date_time_add_full() use floating-point
seconds, which can result in the value varying slightly from what's
actually on disk. This causes intermittent test failures in
gio/tests/g-file-info.c on Debian i386, where we set a file's mtime
to be 50µs later, then read it back and sometimes find that it is only
49µs later than the previous value.

I've only seen this happen on i386, which means it might be to do with
different floating-point rounding when a value is stored in the 80-bit
legacy floating point registers rather than in double precision.

g_date_time_add() takes a GTimeSpan, which is in microseconds;
conveniently, that's exactly what we get from the GFileInfo.

Bug-Debian: https://bugs.debian.org/941547
Signed-off-by: Simon McVittie <smcv@collabora.com>
Forwarded: https://gitlab.gnome.org/GNOME/glib/merge_requests/1139
Applied-upstream: 2.62.1, commit:https://gitlab.gnome.org/GNOME/glib/commit/5625760f127050fef783a17d59a7de51e1065cd8
Applied-upstream: 2.63.0, commit:https://gitlab.gnome.org/GNOME/glib/commit/14609b0b256b9c13162719868d4dfc2b419d885f
---
 gio/gfileinfo.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gio/gfileinfo.c b/gio/gfileinfo.c
index ab4cbea..032d211 100644
--- a/gio/gfileinfo.c
+++ b/gio/gfileinfo.c
@@ -1822,7 +1822,7 @@ g_file_info_get_modification_date_time (GFileInfo *info)
   if (value_usec == NULL)
     return g_steal_pointer (&dt);
 
-  dt2 = g_date_time_add_seconds (dt, _g_file_attribute_value_get_uint32 (value_usec) / (gdouble) G_USEC_PER_SEC);
+  dt2 = g_date_time_add (dt, _g_file_attribute_value_get_uint32 (value_usec));
   g_date_time_unref (dt);
 
   return g_steal_pointer (&dt2);
