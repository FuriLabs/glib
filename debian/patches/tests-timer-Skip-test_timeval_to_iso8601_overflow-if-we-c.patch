From: Iain Lane <iainl@gnome.org>
Date: Mon, 3 Sep 2018 16:40:45 +0000
Subject: tests/timer: Skip test_timeval_to_iso8601_overflow if we can't
 overflow a GTimeVal

On 32 bit systems, the size of a long might be the same as the size of
an int. In that case, we won't be able to get an overflow when
converting from a GTimeVal to a time_t. Skip the test for this in that
case.

Bug-Upstream: https://gitlab.gnome.org/GNOME/glib/issues/1509
Origin: upstream, commit:51e7219c54d07c098f7f1ab5b7b63dea5b1628f7
Applied-Upstream: 2.58.1
---
 glib/tests/timer.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/glib/tests/timer.c b/glib/tests/timer.c
index 5ee191d..5b2e711 100644
--- a/glib/tests/timer.c
+++ b/glib/tests/timer.c
@@ -258,6 +258,12 @@ test_timeval_to_iso8601_overflow (void)
   GTimeVal val;
   gchar *out = NULL;
 
+  if ((glong) G_MAXINT == G_MAXLONG)
+    {
+      g_test_skip ("G_MAXINT == G_MAXLONG - we can't make g_time_val_to_iso8601() overflow.");
+      return;
+    }
+
   g_unsetenv ("TZ");
 
   val.tv_sec = G_MAXLONG;
