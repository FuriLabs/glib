From: Emmanuele Bassi <ebassi@gnome.org>
Date: Thu, 2 Aug 2018 12:21:38 +0100
Subject: Drop a questionable test from the refstring suite

Testing that an interned string is released once its last reference is
dropped is not possible without a hook into the interning machinery;
just checking that the returned pointer for the same string is going to
be different after the last release() is not guaranteed to work, as the
systema allocator is perfectly within its rights to recycle pointers, as
long as they are unique while valid.

Bug: #1467
Origin: upstream, 2.57.3, commit:5e64ee3af774565595a36fb3179206050ab12b6d
---
 glib/tests/refstring.c | 5 -----
 1 file changed, 5 deletions(-)

diff --git a/glib/tests/refstring.c b/glib/tests/refstring.c
index 41ab0c0..4d58eec 100644
--- a/glib/tests/refstring.c
+++ b/glib/tests/refstring.c
@@ -98,11 +98,6 @@ test_refstring_intern (void)
 
   g_test_message ("releasing s[%p] ('%s')", s, s);
   g_ref_string_release (s);
-
-  p = g_ref_string_new_intern ("hello, world");
-  g_test_message ("p[%p] ('%s') != s[%p]", p, p, s);
-  g_assert_false (s == p);
-  g_ref_string_release (p);
 }
 
 int
