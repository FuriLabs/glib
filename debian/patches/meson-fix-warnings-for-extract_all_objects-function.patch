From: Eli Schwartz <eschwartz@archlinux.org>
Date: Wed, 6 Oct 2021 16:56:54 -0400
Subject: meson: fix warnings for extract_all_objects function

The "recursive:" kwarg is available in the targeted minimum version of
meson, and is basically required if you want to not emit warnings and
maybe error with --fatal-meson-warnings.

The current default behavior is false, so explicitly opt in to that value.
None of these internal libraries use recursive objects anyway.

In commit c74d87e44038925baf37367ce124c027e225c11e we went a different
route, and upgraded the minimum meson version and dropped the TODO
workarounds in these files. But for a stable branch this is not
desirable.

Origin: upstream, 2.70.1, commit:397840eb187ae9b5c044d05b9867d8ffa8383f8e
---
 gio/meson.build  | 8 ++++----
 glib/meson.build | 4 ++--
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/gio/meson.build b/gio/meson.build
index ac3373f..89c6dc6 100644
--- a/gio/meson.build
+++ b/gio/meson.build
@@ -419,7 +419,7 @@ if host_system != 'windows'
 
   subdir('xdgmime')
   internal_deps += [xdgmime_lib]
-  internal_objects += [xdgmime_lib.extract_all_objects()]
+  internal_objects += [xdgmime_lib.extract_all_objects(recursive: false)]
 
   install_headers(gio_unix_include_headers, subdir : 'gio-unix-2.0/gio')
 
@@ -758,20 +758,20 @@ gioenumtypes_dep = declare_dependency(sources : [gioenumtypes_h, glib_enumtypes_
 if glib_conf.has('HAVE_SYS_INOTIFY_H') and have_func_inotify_init1
   subdir('inotify')
   internal_deps += [ inotify_lib ]
-  internal_objects += [inotify_lib.extract_all_objects()]
+  internal_objects += [inotify_lib.extract_all_objects(recursive: false)]
 endif
 
 # kevent
 if have_func_kqueue and have_func_kevent
   subdir('kqueue')
   internal_deps += [ kqueue_lib ]
-  internal_objects += [kqueue_lib.extract_all_objects()]
+  internal_objects += [kqueue_lib.extract_all_objects(recursive: false)]
 endif
 
 if host_system == 'windows'
   subdir('win32')
   internal_deps += [ giowin32_lib ]
-  internal_objects += [giowin32_lib.extract_all_objects()]
+  internal_objects += [giowin32_lib.extract_all_objects(recursive: false)]
 endif
 
 if have_bash
diff --git a/glib/meson.build b/glib/meson.build
index 93600b2..2e2e57f 100644
--- a/glib/meson.build
+++ b/glib/meson.build
@@ -117,7 +117,7 @@ else
   endif
 
   subdir('gnulib')
-  gnulib_objects = [gnulib_lib.extract_all_objects()]
+  gnulib_objects = [gnulib_lib.extract_all_objects(recursive: false)]
 endif
 
 glib_headers = files(
@@ -359,7 +359,7 @@ glib_c_args = ['-DG_LOG_DOMAIN="GLib"', '-DGLIB_COMPILATION'] + pcre_static_args
 libglib = library('glib-2.0',
   glib_dtrace_obj, glib_dtrace_hdr,
   sources : [deprecated_sources, glib_sources],
-  objects : [charset_lib.extract_all_objects()] + gnulib_objects,
+  objects : [charset_lib.extract_all_objects(recursive: false)] + gnulib_objects,
   version : library_version,
   soversion : soversion,
   darwin_versions : darwin_versions,
