From: Philip Withnall <withnall@endlessm.com>
Date: Wed, 29 Aug 2018 11:58:51 +0100
Subject: build: Define GLIB_USING_SYSTEM_PRINTF properly

Previously it was hard-coded to true, rather than being based on the
calculations actually made by meson.build.

Signed-off-by: Philip Withnall <withnall@endlessm.com>

Bug: https://gitlab.gnome.org/GNOME/glib/issues/1313
Origin: upstream, 2.59.0, commit:bdc37e371198d03abfc6be12fb6c974e53d577bd
---
 meson.build | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/meson.build b/meson.build
index fcc91b0..1141076 100644
--- a/meson.build
+++ b/meson.build
@@ -893,6 +893,9 @@ else
   glib_conf.set('HAVE_VASPRINTF', 1)
 endif
 
+glibconfig_conf.set('GLIB_USING_SYSTEM_PRINTF',
+                    have_good_vsnprintf and have_good_snprintf and have_good_printf)
+
 # Check whether the printf() family supports Unix98 %n$ positional parameters
 # AC_FUNC_PRINTF_UNIX98
 # Nothing uses HAVE_UNIX98_PRINTF
@@ -1521,8 +1524,6 @@ foreach d : inet_defines
   glibconfig_conf.set(d[1], val)
 endforeach
 
-glibconfig_conf.set('GLIB_USING_SYSTEM_PRINTF', true) # FIXME!
-
 # We need a more robust approach here...
 host_cpu_family = host_machine.cpu_family()
 if host_cpu_family == 'x86' or host_cpu_family == 'x86_64' or host_cpu_family == 's390' or host_cpu_family == 's390x' or host_cpu_family.startswith('arm') or host_cpu_family.startswith('crisv32') or host_cpu_family.startswith('etrax')
